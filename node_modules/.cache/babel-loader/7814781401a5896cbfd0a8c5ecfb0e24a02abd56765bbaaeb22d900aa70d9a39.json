{"ast":null,"code":"var _jsxFileName = \"/Users/maximilianojara/Documents/MyPedYA/my-ped-ya/src/context/authContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useContext } from \"react\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const authContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(authContext);\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const signup = (email, password) => createUserWithEmailAndPassword(auth, email, password);\n  const login = async (email, password) => {\n    const userCredentials = await signInWithEmailAndPassword(auth, email, password);\n  };\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      signup,\n      login\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","createUserWithEmailAndPassword","signInWithEmailAndPassword","auth","authContext","useAuth","context","AuthProvider","children","signup","email","password","login","userCredentials"],"sources":["/Users/maximilianojara/Documents/MyPedYA/my-ped-ya/src/context/authContext.js"],"sourcesContent":["import { createContext, useContext } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport { auth } from \"../firebase\";\r\nexport const authContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(authContext);\r\n  return context;\r\n};\r\n\r\nexport function AuthProvider({ children }) {\r\n  const signup = (email, password) =>\r\n    createUserWithEmailAndPassword(auth, email, password);\r\n\r\n  const login = async (email, password) => {\r\n    const userCredentials = await signInWithEmailAndPassword(\r\n      auth,\r\n      email,\r\n      password\r\n    );\r\n  };\r\n\r\n  return (\r\n    <authContext.Provider value={{ signup, login }}>\r\n      {children}\r\n    </authContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD,SACEC,8BAA8B,EAC9BC,0BAA0B,QACrB,eAAe;AACtB,SAASC,IAAI,QAAQ,aAAa;AAAC;AACnC,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAE;AAE1C,OAAO,MAAMM,OAAO,GAAG,MAAM;EAAA;EAC3B,MAAMC,OAAO,GAAGN,UAAU,CAACI,WAAW,CAAC;EACvC,OAAOE,OAAO;AAChB,CAAC;AAAC,GAHWD,OAAO;AAKpB,OAAO,SAASE,YAAY,OAAe;EAAA,IAAd;IAAEC;EAAS,CAAC;EACvC,MAAMC,MAAM,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAC7BV,8BAA8B,CAACE,IAAI,EAAEO,KAAK,EAAEC,QAAQ,CAAC;EAEvD,MAAMC,KAAK,GAAG,OAAOF,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAME,eAAe,GAAG,MAAMX,0BAA0B,CACtDC,IAAI,EACJO,KAAK,EACLC,QAAQ,CACT;EACH,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEF,MAAM;MAAEG;IAAM,CAAE;IAAA,UAC5CJ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B;AAAC,KAjBeD,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}